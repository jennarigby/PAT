

import static java.awt.image.ImageObserver.HEIGHT;
import java.sql.SQLException;
import java.util.Scanner;
import javax.swing.JOptionPane;


/**
 *
 * @author Jenna Rigby
 */
public class VotingScreen extends javax.swing.JFrame {

    private static String username;
    /**
     * Creates new form VotingScreen
     */
    private String user1;
    private String user2;
    private String song1;
    private String song2;
    private DBConnection db = new DBConnection();
    private int compID;
    private int compIndex;
    private int votesFor1;
    private int votesFor2;
    private boolean voted;
    private Create create = new Create();

    public VotingScreen(String username) {
        try {
            initComponents();
            this.username = username;
            this.setResizable(false);
            
            Voters voters = new Voters(db);
            Competitions comps = new Competitions(db);
            Scanner scFile = new Scanner(voters.displayCompetitions(username));
            compIndex = scFile.nextInt();
            String status = scFile.next();
            
            //displays competition if it has not been voted on yet by the user
            if (status.equals("true")) {
                txfUser1.setText(comps.getCompetition(compIndex).getUser1());
                user1 = comps.getCompetition(compIndex).getUser1();
                txfUser2.setText(comps.getCompetition(compIndex).getUser2());
                user2 = comps.getCompetition(compIndex).getUser2();
                compID = comps.getCompetition(compIndex).getCompetitionID();
                votesFor1 = comps.getCompetition(compIndex).getVotesForOne();
                votesFor2 = comps.getCompetition(compIndex).getVotesForTwo();
            }
            
            
            if (status.equals("false")) {
                JOptionPane.showMessageDialog(rootPane, "No more avaliable "
                        + "competitions! Check back in later!", "", HEIGHT); 
            }
        } catch (SQLException ex) {
            System.out.println("Error when connecting to database.");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlVoteScreen = new javax.swing.JPanel();
        lblVote = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btnPlay2 = new javax.swing.JButton();
        btnVote2 = new javax.swing.JButton();
        txfUser2 = new javax.swing.JTextField();
        txfUser1 = new javax.swing.JTextField();
        btnVote1 = new javax.swing.JButton();
        btnPlay1 = new javax.swing.JButton();
        lblPlaySong1 = new javax.swing.JLabel();
        lblPlaySong2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlVoteScreen.setBackground(new java.awt.Color(0, 0, 0));

        lblVote.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        lblVote.setForeground(new java.awt.Color(255, 255, 255));
        lblVote.setText("VOTE");

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeIcon.JPG"))); // NOI18N
        btnHome.setToolTipText("HOME");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HelpIcon.JPG"))); // NOI18N
        btnHelp.setToolTipText("HELP");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(255, 255, 255));
        btnNext.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnNext.setText("NEXT");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 255, 0));

        btnPlay2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AudioIcon.JPG"))); // NOI18N
        btnPlay2.setToolTipText("PLAY");
        btnPlay2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPlay2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlay2ActionPerformed(evt);
            }
        });

        btnVote2.setBackground(new java.awt.Color(0, 0, 255));
        btnVote2.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        btnVote2.setText("VOTE");
        btnVote2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVote2ActionPerformed(evt);
            }
        });

        txfUser2.setEditable(false);
        txfUser2.setBackground(new java.awt.Color(0, 0, 0));
        txfUser2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        txfUser2.setForeground(new java.awt.Color(255, 255, 255));
        txfUser2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        txfUser1.setEditable(false);
        txfUser1.setBackground(new java.awt.Color(0, 0, 0));
        txfUser1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        txfUser1.setForeground(new java.awt.Color(255, 255, 255));
        txfUser1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        txfUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfUser1ActionPerformed(evt);
            }
        });

        btnVote1.setBackground(new java.awt.Color(255, 0, 0));
        btnVote1.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        btnVote1.setText("VOTE");
        btnVote1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVote1ActionPerformed(evt);
            }
        });

        btnPlay1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AudioIcon.JPG"))); // NOI18N
        btnPlay1.setToolTipText("PLAY");
        btnPlay1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPlay1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlay1ActionPerformed(evt);
            }
        });

        lblPlaySong1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblPlaySong1.setForeground(new java.awt.Color(255, 255, 255));
        lblPlaySong1.setText("PLAY");

        lblPlaySong2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblPlaySong2.setForeground(new java.awt.Color(255, 255, 255));
        lblPlaySong2.setText("PLAY");

        javax.swing.GroupLayout pnlVoteScreenLayout = new javax.swing.GroupLayout(pnlVoteScreen);
        pnlVoteScreen.setLayout(pnlVoteScreenLayout);
        pnlVoteScreenLayout.setHorizontalGroup(
            pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlVoteScreenLayout.createSequentialGroup()
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(252, 252, 252)
                        .addComponent(lblVote)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlVoteScreenLayout.createSequentialGroup()
                        .addGroup(pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(txfUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                                .addGap(131, 131, 131)
                                .addComponent(btnPlay1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblPlaySong1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txfUser2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(136, 136, 136))
                            .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(btnPlay2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblPlaySong2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 142, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                .addGap(339, 339, 339)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(btnVote1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVote2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );
        pnlVoteScreenLayout.setVerticalGroup(
            pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVote)
                    .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfUser2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                        .addGroup(pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPlaySong1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPlay1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPlaySong2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(pnlVoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnVote2)
                            .addComponent(btnVote1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(pnlVoteScreenLayout.createSequentialGroup()
                        .addComponent(btnPlay2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlVoteScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlVoteScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        this.dispose();
        HomeScreen home = new HomeScreen(username);
        home.setVisible(true);
        
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        HelpScreen helpScreen = new HelpScreen(username);
        helpScreen.setVisible(true);
    }//GEN-LAST:event_btnHelpActionPerformed

    private void btnPlay1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlay1ActionPerformed
        try {
            if (txfUser1.getText().isBlank()) {
                
            }else{
                Competitions comps = new Competitions(db);
            song1 = comps.getCompetition(compIndex).getSong1();

            //plays song1 saved as a String in the 'Competitions' table
            Scanner scLine = new Scanner(song1).useDelimiter("#");
            while (scLine.hasNext()) {
                String audioClip = scLine.next() + ".wav";
                int milliseconds = scLine.nextInt();
             
                
                Thread.sleep(milliseconds);
                create.playAudio(audioClip);
            }   
            }         

        } catch (SQLException ex) {
            System.out.println("Error when connecting to database table"
                    + " 'Competitions' ");
        } catch (InterruptedException ex) {
            System.out.println("Thread interrupted. Song cannot be played "
                    + "properly.");
        }
    }//GEN-LAST:event_btnPlay1ActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
  
        try {
            //Displays the next competition that the user has not voted for.
            Voters voters = new Voters(db);
            Competitions comps = new Competitions(db);
            Scanner scFile = new Scanner(voters.displayCompetitions(username));
            compIndex = scFile.nextInt();
            String status = scFile.next();
            
            if (status.equals("true")) {
                txfUser1.setText(comps.getCompetition(compIndex).getUser1());
                user1 = comps.getCompetition(compIndex).getUser1();
                txfUser2.setText(comps.getCompetition(compIndex).getUser2());
                user2 = comps.getCompetition(compIndex).getUser2();
                compID = comps.getCompetition(compIndex).getCompetitionID();
                votesFor1 = comps.getCompetition(compIndex).getVotesForOne();
                votesFor2 = comps.getCompetition(compIndex).getVotesForTwo();                    
            }
            
            
            if (status.equals("false")) {
                JOptionPane.showMessageDialog(rootPane, "No more avaliable "
                        + "competitions! Check back in later!", "", HEIGHT); 
            }
        } catch (SQLException ex) {
            System.out.println("Error connecting to database. ");
        }

      


    }//GEN-LAST:event_btnNextActionPerformed

    private void btnVote2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVote2ActionPerformed
        try {
            if (txfUser2.getText().isBlank()) {

            } else {
                txfUser2.setText("");
                txfUser1.setText("");           
                Competitions comps = new Competitions(db);
                DBConnection db = new DBConnection();
                db.updateVotes(compID, votesFor1, votesFor2 + 1);
                db.addVoter(compID, username, 2);
            }

        } catch (SQLException ex) {
            System.out.println("Error connecting to database.");
        }
    }//GEN-LAST:event_btnVote2ActionPerformed

    private void btnPlay2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlay2ActionPerformed
        try {
            if (txfUser1.getText().isBlank()) {
                
            }
            else{
               Competitions comps = new Competitions(db);
            song2 = comps.getCompetition(compIndex).getSong2();

            //plays song2 saved as a String in the 'Competitions' table
            Scanner scLine = new Scanner(song2).useDelimiter("#");
            while (scLine.hasNext()) {
                String audioClip = scLine.next() + ".wav";
                int milliseconds = scLine.nextInt();
                System.out.println(audioClip + " " + milliseconds);
                
                Thread.sleep(milliseconds);
                create.playAudio(audioClip);
            }  
            }           

        } catch (SQLException ex) {
            System.out.println("Error when connecting to database table"
                    + " 'Competitions' ");
                        
        } catch (InterruptedException ex) {
            System.out.println("Thread interrupted. Song cannot be played "
                    + "properly.");
        }
    }//GEN-LAST:event_btnPlay2ActionPerformed

    private void btnVote1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVote1ActionPerformed
        try {
            if (txfUser1.getText().isBlank()) {
            } else {
                txfUser1.setText("");
                txfUser2.setText("");
                Competitions comps = new Competitions(db);
                DBConnection db = new DBConnection();
                db.updateVotes(compID, votesFor1 + 1, votesFor2);
                db.addVoter(compID, username, 1);
            }

        } catch (SQLException ex) {
          System.out.println("Error connecting to database.");

        }
    }//GEN-LAST:event_btnVote1ActionPerformed

    private void txfUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfUser1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfUser1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VotingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VotingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VotingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VotingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VotingScreen(username).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPlay1;
    private javax.swing.JButton btnPlay2;
    private javax.swing.JButton btnVote1;
    private javax.swing.JButton btnVote2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblPlaySong1;
    private javax.swing.JLabel lblPlaySong2;
    private javax.swing.JLabel lblVote;
    private javax.swing.JPanel pnlVoteScreen;
    private javax.swing.JTextField txfUser1;
    private javax.swing.JTextField txfUser2;
    // End of variables declaration//GEN-END:variables
}
